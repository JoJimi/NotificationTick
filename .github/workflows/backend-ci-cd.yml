name: Backend CI/CD PipeLine

on:
  pull_request:
    branches: [ "develop" ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-*.yml'

defaults:
  run:
    shell: bash
    working-directory: ./backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      postgresql:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U $${POSTGRES_USER}"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Make Docker Env
        run: |
          touch ./.env
          echo "${{ secrets.DOCKER_ENV }}" > ./.env

      - name: make application.yml
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.DEV }}" >> ./application-dev.yml
        shell: bash

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test --stacktrace

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: backend/Dockerfile
          push: true
          tags: |
            jimineutron/notification_tick-backend:latest
            jimineutron/notification_tick-backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    # 백엔드 코드 AWS EC2에 배포하는 로직 추가 예정!
    steps:
      - name: Notify Slack
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#00FF00'
          SLACK_TITLE: 'Build and Deploy'
          SLACK_TEXT: |
            ✅ 백엔드 이미지 푸시 성공
            - jimineutron/notification_tick-backend:${{ github.sha }}