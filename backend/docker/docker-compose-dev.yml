services:
  postgres-dev:
    image: postgres:15-alpine
    container_name: predictick_postgres_dev
    restart: always
    environment:
      POSTGRES_DB: predictick_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    networks:
      - app

  redis:
    image: redis:7-alpine
    container_name: predictick_redis_dev
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"   # host -> broker(PLAINTEXT)
      - "9093:9093"   # controller
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # 백엔드가 "호스트"에서 접속하면 localhost 광고가 맞습니다.
      # (만약 백엔드도 도커로 올릴 계획이면 아래 참고의 "이중 리스너"로 바꾸세요)
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # ⚠️ KRaft는 유효한 클러스터 ID가 필요합니다(예시는 22자).
      CLUSTER_ID: "8Uc-NUrZQaCDQPypfxvhzg"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app

  prometheus:
    image: prom/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ../prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

volumes:
  pgdata_dev:
  redis_data:
  grafana_data:
  kafka_data:

networks:
  app:
  monitoring:
